"use strict";
var helpers_1 = require("../common/helpers");
var command_params_1 = require("../common/command-params");
var ListiOSApps = (function () {
    function ListiOSApps($injector, $itmsTransporterService, $logger, $prompter, $stringParameterBuilder) {
        this.$injector = $injector;
        this.$itmsTransporterService = $itmsTransporterService;
        this.$logger = $logger;
        this.$prompter = $prompter;
        this.$stringParameterBuilder = $stringParameterBuilder;
        this.allowedParameters = [new command_params_1.StringCommandParameter(this.$injector), new command_params_1.StringCommandParameter(this.$injector)];
    }
    ListiOSApps.prototype.execute = function (args) {
        var _this = this;
        return (function () {
            var username = args[0], password = args[1];
            if (!username) {
                username = _this.$prompter.getString("Apple ID", { allowEmpty: false }).wait();
            }
            if (!password) {
                password = _this.$prompter.getPassword("Apple ID password").wait();
            }
            var iOSApplications = _this.$itmsTransporterService.getiOSApplications({ username: username, password: password }).wait();
            if (!iOSApplications || !iOSApplications.length) {
                _this.$logger.out("Seems you don't have any applications yet.");
            }
            else {
                var table = helpers_1.createTable(["Application Name", "Bundle Identifier", "Version"], iOSApplications.map(function (element) {
                    return [element.name, element.bundleId, element.version];
                }));
                _this.$logger.out(table.toString());
            }
        }).future()();
    };
    return ListiOSApps;
}());
exports.ListiOSApps = ListiOSApps;
$injector.registerCommand("appstore|*list", ListiOSApps);
